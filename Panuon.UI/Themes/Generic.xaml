<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI;component/Themes/Control.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <local:ToggleCornerRadiusConverter x:Key="ToggleCornerRadiusConverter"></local:ToggleCornerRadiusConverter>
    <local:ToggleHeightConverter x:Key="ToggleHeightConverter"></local:ToggleHeightConverter>
    <local:TranslateXConverter x:Key="TranslateXConverter"></local:TranslateXConverter>
    <local:ScaleConverter x:Key="ScaleConverter"></local:ScaleConverter>
    <local:TextBoxInnerWidthConverter x:Key="TextBoxInnerWidthConverter"></local:TextBoxInnerWidthConverter>
    <local:TextBoxInnerHeightConverter x:Key="TextBoxInnerHeightConverter"></local:TextBoxInnerHeightConverter>
    <local:HeaderConverter x:Key="HeaderConverter"></local:HeaderConverter>
    <local:IconFontSizeConverter x:Key="IconFontSizeConverter"></local:IconFontSizeConverter>
    <local:ProgressBarConverter x:Key="ProgressBarConverter"></local:ProgressBarConverter>

    <local:WidthToMarginConverter x:Key="WidthToMarginConverter"></local:WidthToMarginConverter>

    <Style TargetType="{x:Type local:PUResizeGrid}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUResizeGrid}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <local:ResizeThumb Height="2"
                                               Cursor="SizeNS"
                                               BorderBrush="Transparent"
                                               BorderThickness="2"
                                               Margin="0 -2 0 0"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Stretch" />
                            <local:ResizeThumb Width="2"
                                               Cursor="SizeWE"
                                               Margin="-2 0 0 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="2"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Left" />
                            <local:ResizeThumb Width="2"
                                               Cursor="SizeWE"
                                               Margin="0 0 -2 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="2"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Right" />
                            <local:ResizeThumb Height="2"
                                               Cursor="SizeNS"
                                               Margin="0 0 0 -2"
                                               BorderBrush="Transparent"
                                               BorderThickness="2"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Stretch" />
                            <local:ResizeThumb Width="4"
                                               Height="4"
                                               Cursor="SizeNWSE"
                                               Margin="-2 -2 0 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="4"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Left" />
                            <local:ResizeThumb Width="4"
                                               Height="4"
                                               Cursor="SizeNESW"
                                               Margin="0 -2 -2 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="4"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Right" />
                            <local:ResizeThumb Width="4"
                                               Height="4"
                                               Cursor="SizeNESW"
                                               Margin="-2 0 0 -2"
                                               BorderBrush="Transparent"
                                               BorderThickness="4"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left" />
                            <local:ResizeThumb Width="4"
                                               Height="4"
                                               Cursor="SizeNWSE"
                                               Margin="0 0 -2 -2"
                                               BorderBrush="Transparent"
                                               BorderThickness="4"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Right" />
                        </Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUWindow}">
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderBrush"
                Value="Gray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="WindowStyle"
                Value="None"></Setter>
        <Setter Property="AllowsTransparency"
                Value="True"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="AnimationStyle"
                     Value="Fade">
                <Setter Property="Opacity"
                        Value="0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUWindow}">
                            <Border x:Name="bdrOuter"
                                    Margin="5"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}">
                                <Grid>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="grdNavbar"
                                              Background="{Binding NavbarBackground,RelativeSource={RelativeSource AncestorType=Window}}">
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"
                                                       Margin="3,0,0,0"
                                                       VerticalContentAlignment="Center"
                                                       HorizontalContentAlignment="Left"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{StaticResource IconFont}"
                                                       Foreground="{TemplateBinding Foreground}"></Label>
                                                <Label VerticalContentAlignment="Center"
                                                       HorizontalContentAlignment="Left"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{StaticResource IconFont}"
                                                       Foreground="{TemplateBinding Foreground}">
                                                    <Label.Content>
                                                        <MultiBinding Converter="{StaticResource HeaderConverter}">
                                                            <Binding Path="Header"
                                                                     RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                            <Binding Path="Title"
                                                                     RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                        </MultiBinding>
                                                    </Label.Content>
                                                </Label>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <local:PUButton x:Name="btnMin"
                                                                Visibility="Collapsed"
                                                                Content="-"
                                                                Command="{Binding MinCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#99999999"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                <local:PUButton x:Name="btnMax"
                                                                Visibility="Collapsed"
                                                                Content="□"
                                                                Command="{Binding MaxCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#99999999"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                <local:PUButton x:Name="btnClose"
                                                                Visibility="Collapsed"
                                                                Content="×"
                                                                Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#CCC53434"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}" />
                                            </StackPanel>
                                        </Grid>
                                        <Grid Grid.Row="1"
                                              x:Name="grdContainer">
                                            <AdornerDecorator>
                                                <ContentPresenter Content="{TemplateBinding Content}" />
                                            </AdornerDecorator>
                                        </Grid>
                                    </Grid>
                                    <Border x:Name="bdrCover"
                                            Background="Black"
                                            BorderThickness="0"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                            Opacity="0"
                                            IsHitTestVisible="False" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.4">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger SourceName="btnClose"
                                              RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.3">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsCoverMaskShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanMinimize">
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="NoResize">
                                    <Setter TargetName="btnMin"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="NavButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnMin"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnClose"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="AnimationStyle"
                     Value="Gradual">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUWindow}">
                            <Border x:Name="bdrOuter"
                                    Margin="5"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}">
                                <Border.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientStopCollection>
                                            <GradientStop x:Name="offset1"
                                                          Offset="0"
                                                          Color="White"></GradientStop>
                                            <GradientStop x:Name="offset2"
                                                          Offset="0"
                                                          Color="Transparent"></GradientStop>
                                        </GradientStopCollection>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Grid>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="grdNavbar"
                                              Background="{Binding NavbarBackground,RelativeSource={RelativeSource AncestorType=Window}}">
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"
                                                       Margin="3,0,0,0"
                                                       VerticalContentAlignment="Center"
                                                       HorizontalContentAlignment="Left"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{StaticResource IconFont}"
                                                       Foreground="{TemplateBinding Foreground}"></Label>
                                                <Label VerticalContentAlignment="Center"
                                                       HorizontalContentAlignment="Left"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{StaticResource IconFont}"
                                                       Foreground="{TemplateBinding Foreground}">
                                                    <Label.Content>
                                                        <MultiBinding Converter="{StaticResource HeaderConverter}">
                                                            <Binding Path="Header"
                                                                     RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                            <Binding Path="Title"
                                                                     RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                        </MultiBinding>
                                                    </Label.Content>
                                                </Label>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <local:PUButton x:Name="btnMin"
                                                                Visibility="Hidden"
                                                                Content="-"
                                                                Command="{Binding MinCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#99999999"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                <local:PUButton x:Name="btnMax"
                                                                Visibility="Hidden"
                                                                Content="□"
                                                                Command="{Binding MaxCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#99999999"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                <local:PUButton x:Name="btnClose"
                                                                Visibility="Hidden"
                                                                Content="×"
                                                                Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#CCC53434"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}" />
                                            </StackPanel>
                                        </Grid>
                                        <Grid Grid.Row="1"
                                              x:Name="grdContainer">
                                            <AdornerDecorator>
                                                <ContentPresenter Content="{TemplateBinding Content}" />
                                            </AdornerDecorator>
                                        </Grid>
                                    </Grid>
                                    <Border x:Name="bdrCover"
                                            Background="Black"
                                            BorderThickness="0"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                            Opacity="0"
                                            IsHitTestVisible="False" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="offset2"
                                                             Storyboard.TargetProperty="Offset"
                                                             To="1"
                                                             Duration="0:0:0.2"></DoubleAnimation>
                                            <ColorAnimation Storyboard.TargetName="offset2"
                                                            Storyboard.TargetProperty="Color"
                                                            To="White"
                                                            Duration="0:0:0.1"
                                                            BeginTime="0:0:0.2"></ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger SourceName="btnClose"
                                              RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="offset1"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Transparent"
                                                            Duration="0:0:0.2"></ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="offset1"
                                                             Storyboard.TargetProperty="Offset"
                                                             To="1"
                                                             Duration="0:0:0.1"
                                                             BeginTime="0:0:0.2"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsCoverMaskShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanMinimize">
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="NoResize">
                                    <Setter TargetName="btnMin"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="NavButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnMin"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnClose"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="AnimationStyle"
                     Value="Scale">
                <Setter Property="Opacity"
                        Value="0.5"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUWindow}">
                            <Border x:Name="bdrOuter"
                                    Margin="5"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="scale"
                                                    ScaleX="0.95"
                                                    ScaleY="0.95" />
                                </Border.RenderTransform>
                                <Grid>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="grdNavbar"
                                              Background="{Binding NavbarBackground,RelativeSource={RelativeSource AncestorType=Window}}">
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"
                                                       Margin="3,0,0,0"
                                                       VerticalContentAlignment="Center"
                                                       HorizontalContentAlignment="Left"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{StaticResource IconFont}"
                                                       Foreground="{TemplateBinding Foreground}"></Label>
                                                <Label VerticalContentAlignment="Center"
                                                       HorizontalContentAlignment="Left"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{StaticResource IconFont}"
                                                       Foreground="{TemplateBinding Foreground}">
                                                    <Label.Content>
                                                        <MultiBinding Converter="{StaticResource HeaderConverter}">
                                                            <Binding Path="Header"
                                                                     RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                            <Binding Path="Title"
                                                                     RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                        </MultiBinding>
                                                    </Label.Content>
                                                </Label>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <local:PUButton x:Name="btnMin"
                                                                Visibility="Hidden"
                                                                Content="-"
                                                                Command="{Binding MinCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#99999999"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                <local:PUButton x:Name="btnMax"
                                                                Visibility="Hidden"
                                                                Content="□"
                                                                Command="{Binding MaxCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#99999999"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                <local:PUButton x:Name="btnClose"
                                                                Visibility="Hidden"
                                                                Content="×"
                                                                Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                ButtonStyle="Hollow"
                                                                BorderBrush="Transparent"
                                                                CoverBrush="#CCC53434"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                HorizontalAlignment="Right"
                                                                FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}" />
                                            </StackPanel>
                                        </Grid>
                                        <Grid Grid.Row="1"
                                              x:Name="grdContainer">
                                            <AdornerDecorator>
                                                <ContentPresenter Content="{TemplateBinding Content}" />
                                            </AdornerDecorator>
                                        </Grid>
                                    </Grid>
                                    <Border x:Name="bdrCover"
                                            Background="Black"
                                            BorderThickness="0"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                            Opacity="0"
                                            IsHitTestVisible="False" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             To="1"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleY"
                                                             To="1"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.4" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger SourceName="btnClose"
                                              RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             To="0.95"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleY"
                                                             To="0.95"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsCoverMaskShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanMinimize">
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="NoResize">
                                    <Setter TargetName="btnMin"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="NavButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnMin"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnClose"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUButton}">
        <Setter Property="Background"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="Content"
                Value="Button"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="ButtonStyle"
                     Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Border x:Name="bdrInner"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            ClipToBounds="True"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                        <ContentPresenter x:Name="content"
                                                          Margin="{TemplateBinding Padding}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          ContentSource="Content"></ContentPresenter>
                                    </Border>
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle"
                     Value="Hollow">
                <Setter Property="Foreground"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border x:Name="bdrHoverCover"
                                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                                Opacity="0"
                                                Margin="-1"></Border>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="White"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="White"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle"
                     Value="Outline">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="1">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.5,0.5"
                                                             RadiusX="1"
                                                             RadiusY="1">
                                            <GradientStopCollection>
                                                <GradientStop Offset="0"
                                                              Color="White"></GradientStop>
                                                <GradientStop x:Name="offset"
                                                              Offset="0"
                                                              Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                    <Label Margin="{TemplateBinding Padding}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"></Label>

                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{TemplateBinding CoverBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,2,0,-1.5"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.15"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.15"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Label x:Name="lblContent"
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblCover"
                                       Opacity="0"
                                       Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblPressedCover"
                                       Opacity="0"
                                       Foreground="White"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="lblPressedCover"
                                            Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PURepeatButton}">
        <Setter Property="Background"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="Content"
                Value="RepeatButton"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="RepeatButtonStyle"
                     Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                    <Border x:Name="bdrInner"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            ClipToBounds="True"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                        <ContentPresenter x:Name="content"
                                                          Margin="{TemplateBinding Padding}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          ContentSource="Content"></ContentPresenter>
                                    </Border>
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RepeatButtonStyle"
                     Value="Hollow">
                <Setter Property="Foreground"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                    <Grid>
                                        <Border x:Name="bdrHoverCover"
                                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                                Opacity="0"
                                                Margin="-1"></Border>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="White"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="White"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RepeatButtonStyle"
                     Value="Outline">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                    <Grid>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="1">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.5,0.5"
                                                             RadiusX="1"
                                                             RadiusY="1">
                                            <GradientStopCollection>
                                                <GradientStop Offset="0"
                                                              Color="White"></GradientStop>
                                                <GradientStop x:Name="offset"
                                                              Offset="0"
                                                              Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                    <Label Margin="{TemplateBinding Padding}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"></Label>

                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{TemplateBinding CoverBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,2,0,-1.5"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.15"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.15"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RepeatButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Label x:Name="lblContent"
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblCover"
                                       Opacity="0"
                                       Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblPressedCover"
                                       Opacity="0"
                                       Foreground="White"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="lblPressedCover"
                                            Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTextBox}">
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="0.3"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="6,0,0,0"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="TextBoxStyle"
                     Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTextBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="0"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0.4" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      Margin="{TemplateBinding Padding}"
                                                      IsTabStop="False"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <ScrollViewer.Width>
                                                <MultiBinding Converter="{StaticResource TextBoxInnerWidthConverter}">
                                                    <Binding Path="ActualWidth"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="Padding"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="HorizontalContentAlignment"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                </MultiBinding>
                                            </ScrollViewer.Width>
                                            <ScrollViewer.Height>
                                                <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                    <Binding Path="ActualHeight"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="Padding"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="VerticalContentAlignment"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                </MultiBinding>
                                            </ScrollViewer.Height>
                                        </ScrollViewer>
                                        <TextBlock  x:Name="tbWatermark"
                                                    Margin="3,0,0,0"
                                                    Padding="{TemplateBinding Padding}"
                                                    TextWrapping="Wrap"
                                                    Focusable="False"
                                                    IsHitTestVisible="False"
                                                    Visibility="Collapsed"
                                                    Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Opacity="0.6" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="5"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TextBoxStyle"
                     Value="IconGroup">
                <Setter Property="Padding"
                        Value="30,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTextBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="0"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0.4" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Label Width="{Binding IconWidth,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontFamily="{StaticResource IconFont}"></Label>
                                        <Grid>
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          Style="{StaticResource MiniScrollViewer}"
                                                          Margin="{TemplateBinding Padding}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                <ScrollViewer.Width>
                                                    <MultiBinding Converter="{StaticResource TextBoxInnerWidthConverter}">
                                                        <Binding Path="ActualWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="Padding"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="HorizontalContentAlignment"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    </MultiBinding>
                                                </ScrollViewer.Width>
                                                <ScrollViewer.Height>
                                                    <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                        <Binding Path="ActualHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="Padding"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="VerticalContentAlignment"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    </MultiBinding>
                                                </ScrollViewer.Height>
                                            </ScrollViewer>
                                            <TextBlock  x:Name="tbWatermark"
                                                        Margin="3,0,0,0"
                                                        Padding="{TemplateBinding Padding}"
                                                        TextWrapping="Wrap"
                                                        Focusable="False"
                                                        IsHitTestVisible="False"
                                                        Visibility="Collapsed"
                                                        Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Opacity="0.6" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="5"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUComboBox}">
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="UseLayoutRounding"
                Value="True"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="FontSize"
                Value="14">
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUComboBox}">
                    <Border x:Name="bdrMain"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ComboBox}}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Left"
                                              Margin="{TemplateBinding Padding}"
                                              x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False"
                                              Opacity="0.8" />
                            <ToggleButton x:Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          BorderThickness="0">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid Background="Transparent">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="30" />
                                                        </Grid.ColumnDefinitions>
                                                        <Path x:Name="arrow1"
                                                              Opacity="1"
                                                              VerticalAlignment="Center"
                                                              Grid.Column="1"
                                                              HorizontalAlignment="Center"
                                                              Data="M5,4 H14 L9.5,10 Z"
                                                              Width="15"
                                                              Height="15"
                                                              Fill="{TemplateBinding Foreground}"
                                                              RenderTransformOrigin="0.5,0.5" />
                                                        <Path x:Name="arrow2"
                                                              Opacity="0"
                                                              VerticalAlignment="Center"
                                                              Grid.Column="1"
                                                              HorizontalAlignment="Center"
                                                              Data="M5,10 H14 L9.5,4.5 Z"
                                                              Width="15"
                                                              Height="15"
                                                              Fill="{TemplateBinding Foreground}"
                                                              RenderTransformOrigin="0.5,0.5" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked"
                                                                 Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="0"
                                                                                         Duration="0:0:0.2"></DoubleAnimation>
                                                                        <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="1"
                                                                                         Duration="0:0:0.2"></DoubleAnimation>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="1"
                                                                                         Duration="0:0:0.2"></DoubleAnimation>
                                                                        <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="0"
                                                                                         Duration="0:0:0.2"></DoubleAnimation>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>

                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                            <local:PUTextBox Visibility="Hidden"
                                             BorderThickness="0"
                                             Margin="2,0,25,0"
                                             Padding="2,0,0,0"
                                             x:Name="PART_EditableTextBox"
                                             VerticalAlignment="Center"
                                             Focusable="True"
                                             Background="Transparent"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             Foreground="{TemplateBinding Foreground}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <!--Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen-->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   x:Name="Popup"
                                   Focusable="False"
                                   AllowsTransparency="True"
                                   PopupAnimation="Slide">
                                <Grid MaxHeight="180"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      x:Name="DropDown">
                                    <Border x:Name="DropDownBorder"
                                            Margin="0,0,0,10"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="0"
                                                              BlurRadius="10"
                                                              Opacity="1"
                                                              Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=ComboBox}}"></DropShadowEffect>
                                        </Border.Effect>
                                    </Border>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto"
                                                  Style="{StaticResource MiniScrollViewer}"
                                                  Margin="1,5,1,15"
                                                  MaxHeight="250">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    Orientation="Vertical">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable"
                                 Value="True">
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ContentSite"
                                    Property="Opacity"
                                    Value="0.9"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="ContentSite"
                                    Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUComboBoxItem}">
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="10,0,0,0"></Setter>
        <Setter Property="UseLayoutRounding"
                Value="True"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="FontSize"
                Value="14">
        </Setter>
        <Setter Property="MinHeight"
                Value="35"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUComboBoxItem}">
                    <Grid Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}">
                        <Border x:Name="bdrMain"
                                Background="Transparent" />
                        <TextBlock Margin="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   x:Name="txtContent"
                                   Opacity="0.8"
                                   Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                   Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        <local:PUButton x:Name="btnDelete"
                                        ButtonStyle="Link"
                                        Opacity="0.7"
                                        Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=ComboBoxItem}}"
                                        CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                        Width="35"
                                        Cursor="Arrow"
                                        Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                        CoverBrush="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                        Visibility="{Binding DeleteButtonVisibility,RelativeSource={RelativeSource AncestorType=ComboBoxItem}}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Right"
                                        VerticalContentAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        FontSize="20"
                                        Content="×"></local:PUButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="bdrMain"
                                    Property="Background"
                                    Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                            <Setter TargetName="txtContent"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="false" />
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bdrMain"
                                    Property="Background"
                                    Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                            <Setter TargetName="txtContent"
                                    Property="Opacity"
                                    Value="0.7" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUPasswordBox}">
        <Setter Property="AcceptsReturn"
                Value="False"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="0.3"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="6,0,0,0"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="InputMethod.IsInputMethodEnabled"
                Value="False"></Setter>
        <Style.Triggers>
            <Trigger Property="PasswordBoxStyle"
                     Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUPasswordBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="0"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0.4" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      Margin="{TemplateBinding Padding}"
                                                      IsTabStop="False"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <ScrollViewer.Width>
                                                <MultiBinding Converter="{StaticResource TextBoxInnerWidthConverter}">
                                                    <Binding Path="ActualWidth"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="Padding"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="HorizontalContentAlignment"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                </MultiBinding>
                                            </ScrollViewer.Width>
                                            <ScrollViewer.Height>
                                                <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                    <Binding Path="ActualHeight"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="Padding"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="VerticalContentAlignment"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                </MultiBinding>
                                            </ScrollViewer.Height>
                                        </ScrollViewer>
                                        <TextBlock  x:Name="tbWatermark"
                                                    Margin="3,0,0,0"
                                                    Padding="{TemplateBinding Padding}"
                                                    TextWrapping="Wrap"
                                                    Focusable="False"
                                                    IsHitTestVisible="False"
                                                    Visibility="Collapsed"
                                                    Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Opacity="0.6" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="5"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="PasswordBoxStyle"
                     Value="IconGroup">
                <Setter Property="Padding"
                        Value="30,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUPasswordBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="0"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0.4" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Label Width="{Binding IconWidth,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontFamily="{StaticResource IconFont}"></Label>
                                        <Grid>
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          Style="{StaticResource MiniScrollViewer}"
                                                          Margin="{TemplateBinding Padding}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                <ScrollViewer.Width>
                                                    <MultiBinding Converter="{StaticResource TextBoxInnerWidthConverter}">
                                                        <Binding Path="ActualWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="Padding"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="HorizontalContentAlignment"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    </MultiBinding>
                                                </ScrollViewer.Width>
                                                <ScrollViewer.Height>
                                                    <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                        <Binding Path="ActualHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="Padding"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="VerticalContentAlignment"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    </MultiBinding>
                                                </ScrollViewer.Height>
                                            </ScrollViewer>
                                            <TextBlock  x:Name="tbWatermark"
                                                        Margin="3,0,0,0"
                                                        Padding="{TemplateBinding Padding}"
                                                        TextWrapping="Wrap"
                                                        Focusable="False"
                                                        IsHitTestVisible="False"
                                                        Visibility="Collapsed"
                                                        Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Opacity="0.6" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="5"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUCheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="4,0,0,0"></Setter>
        <Setter Property="IsChecked"
                Value="False"></Setter>
        <Setter Property="Content"
                Value="CheckBox"></Setter>
        <Setter Property="Cursor"
                Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="CheckBoxStyle"
                     Value="General">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0.7">
                                    <Path x:Name="pCheck"
                                          Width="16"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                          StrokeThickness="1.5"
                                          Stroke="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                          RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <ScaleTransform>
                                                <ScaleTransform.ScaleX>
                                                    <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </ScaleTransform.ScaleX>
                                                <ScaleTransform.ScaleY>
                                                    <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </ScaleTransform.ScaleY>
                                            </ScaleTransform>
                                        </Path.RenderTransform>
                                        <Path.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="1,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Path.OpacityMask>
                                    </Path>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="bdrOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Classic">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0.9">
                                    <Border x:Name="bdrInner"
                                            Margin="-0.5,0"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}">
                                        <Path x:Name="pCheck"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                              StrokeThickness="1.5"
                                              Stroke="White"
                                              RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <ScaleTransform>
                                                    <ScaleTransform.ScaleX>
                                                        <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                            <Binding Path="InnerWidth"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                            <Binding Path="InnerHeight"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleX>
                                                    <ScaleTransform.ScaleY>
                                                        <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                            <Binding Path="InnerWidth"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                            <Binding Path="InnerHeight"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleY>
                                                </ScaleTransform>
                                            </Path.RenderTransform>
                                            <Path.OpacityMask>
                                                <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="1,1">
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0"
                                                                      Color="White"></GradientStop>
                                                        <GradientStop x:Name="offset"
                                                                      Offset="0"
                                                                      Color="Transparent"></GradientStop>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush>
                                            </Path.OpacityMask>
                                        </Path>
                                    </Border>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="bdrOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Switch">
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="CoverBrush"
                        Value="LightGray"></Setter>
                <Setter Property="InnerHeight"
                        Value="25"></Setter>
                <Setter Property="InnerWidth"
                        Value="35"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <StackPanel Orientation="Horizontal"
                                        Background="{TemplateBinding Background}">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                      Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}">
                                    <Border x:Name="bdrOuter"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleCornerRadiusConverter}}">
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                Background="White"
                                                CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleCornerRadiusConverter}}"
                                                RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <ScaleTransform x:Name="scale"
                                                                ScaleX="1"
                                                                ScaleY="1"></ScaleTransform>
                                            </Border.RenderTransform>
                                        </Border>
                                    </Border>
                                    <Border HorizontalAlignment="Right"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleCornerRadiusConverter}}"
                                            Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleHeightConverter}}"
                                            Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleHeightConverter}}"
                                            Background="White">
                                        <Border.Effect>
                                            <DropShadowEffect x:Name="effect"
                                                              Color="DimGray"
                                                              Opacity="0.4"
                                                              BlurRadius="3"
                                                              ShadowDepth="0.5"
                                                              Direction="215"></DropShadowEffect>
                                        </Border.Effect>
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="translate">
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource TranslateXConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleX"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleY"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="translate"
                                                                     Storyboard.TargetProperty="X"
                                                                     To="-1"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleY"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="translate"
                                                                 Storyboard.TargetProperty="X"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="BlurRadius"
                                                                      To="5"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="ShadowDepth"
                                                                      To="1"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="BlurRadius"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="ShadowDepth"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Branch">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="5,0,0,0"></Setter>
                <Setter Property="Padding"
                        Value="10,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <Grid>
                                <Grid>
                                    <Border x:Name="bdrCover"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0.2" />
                                    <Border x:Name="bdrInner"
                                            BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0.7">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.05"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.05"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.05"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Button">
                <Setter Property="CoverBrush"
                        Value="#EE666666"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Padding"
                        Value="10,0"></Setter>
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <Grid x:Name="GrdMain"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{TemplateBinding Background}"></Border>
                                <Border x:Name="bdrCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrCheckedCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0"></Border>
                                <Label x:Name="lblContent"
                                       Content="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                </Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter TargetName="bdrCheckedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PURadioButton}">
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="4,0,0,0"></Setter>
        <Setter Property="IsChecked"
                Value="False"></Setter>
        <Setter Property="Content"
                Value="RadioButton"></Setter>
        <Setter Property="Cursor"
                Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="RadioButtonStyle"
                     Value="General">
                <Setter Property="Background"
                        Value="White"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderCornerRadius"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <StackPanel Orientation="Horizontal">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                      Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    <Ellipse x:Name="ellOuter"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Fill="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    </Ellipse>
                                    <Ellipse x:Name="ellInner"
                                             Fill="{TemplateBinding Background}"
                                             Stroke="Transparent"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="scale1"
                                                            ScaleX="1"
                                                            ScaleY="1"></ScaleTransform>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <Ellipse Fill="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Stroke="Transparent"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="scale2"
                                                            ScaleX="0"
                                                            ScaleY="0"></ScaleTransform>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.82"
                                                                 Duration="0:0:0.4"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.82"
                                                                 Duration="0:0:0.4"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.36"
                                                                 Duration="0:0:0.5"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.36"
                                                                 Duration="0:0:0.5"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="1"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="1"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Classic">
                <Setter Property="BorderBrush"
                        Value="Transparent"></Setter>
                <Setter Property="Background"
                        Value="#66AAAAAA"></Setter>
                <Setter Property="CoverBrush"
                        Value="#666666"></Setter>
                <Setter Property="BorderCornerRadius"
                        Value="10"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <StackPanel Orientation="Horizontal">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                      Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    <Ellipse x:Name="ellOuter"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Fill="{TemplateBinding Background}">
                                    </Ellipse>
                                    <Ellipse x:Name="ellInner"
                                             Fill="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Stroke="Transparent"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="scale1"
                                                            ScaleX="0"
                                                            ScaleY="0"></ScaleTransform>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Effect>
                                            <DropShadowEffect Color="#FFFFFF"
                                                              ShadowDepth="0"
                                                              BlurRadius="5"
                                                              Opacity="0.5"></DropShadowEffect>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.5"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.5"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Switch">
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="CoverBrush"
                        Value="LightGray"></Setter>
                <Setter Property="InnerHeight"
                        Value="25"></Setter>
                <Setter Property="InnerWidth"
                        Value="35"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <StackPanel Orientation="Horizontal">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                      Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    <Border x:Name="bdrOuter"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleCornerRadiusConverter}}">
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                Background="White"
                                                CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleCornerRadiusConverter}}"
                                                RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <ScaleTransform x:Name="scale"
                                                                ScaleX="1"
                                                                ScaleY="1"></ScaleTransform>
                                            </Border.RenderTransform>
                                        </Border>
                                    </Border>
                                    <Border HorizontalAlignment="Right"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleCornerRadiusConverter}}"
                                            Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleHeightConverter}}"
                                            Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleHeightConverter}}"
                                            Background="White">
                                        <Border.Effect>
                                            <DropShadowEffect x:Name="effect"
                                                              Color="DimGray"
                                                              Opacity="0.4"
                                                              BlurRadius="3"
                                                              ShadowDepth="0.5"
                                                              Direction="215"></DropShadowEffect>
                                        </Border.Effect>
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="translate">
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource TranslateXConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=RadioButton}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=RadioButton}"></Binding>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleX"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleY"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="translate"
                                                                     Storyboard.TargetProperty="X"
                                                                     To="-1"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleY"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="translate"
                                                                 Storyboard.TargetProperty="X"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="BlurRadius"
                                                                      To="5"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="ShadowDepth"
                                                                      To="1"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="BlurRadius"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="ShadowDepth"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Branch">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="5,0,0,0"></Setter>
                <Setter Property="Padding"
                        Value="10,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <Grid>
                                <Grid>
                                    <Border x:Name="bdrCover"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            Opacity="0.2" />
                                    <Border x:Name="bdrInner"
                                            BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            Opacity="0.7">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.05"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.05"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.05"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Button">
                <Setter Property="CoverBrush"
                        Value="#EE666666"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Padding"
                        Value="10,0"></Setter>
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <Grid x:Name="GrdMain"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Background="{TemplateBinding Background}"></Border>
                                <Border x:Name="bdrCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrCheckedCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Opacity="0"></Border>
                                <Label x:Name="lblContent"
                                       Content="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                </Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter TargetName="bdrCheckedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTreeViewItem}">
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>

        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="IsExpanded"
                Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUTreeViewItem}">
                    <StackPanel>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=TreeView}}">
                            <Grid>
                                <Border x:Name="bdrCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                        Opacity="0">
                                </Border>
                                <Border x:Name="bdrSelectedCover"
                                        Background="{Binding ChoosedBrush,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                        Opacity="0">
                                </Border>
                                <StackPanel Orientation="Horizontal"
                                            Margin="{TemplateBinding Padding}">
                                    <ToggleButton x:Name="toggle"
                                                  Width="20"
                                                  IsChecked="{TemplateBinding IsExpanded}">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border>
                                                    <ContentPresenter VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center" />
                                                </Border>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                        <ToggleButton.Content>
                                            <Grid x:Name="arrow"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Width="{TemplateBinding Height}"
                                                  Height="{TemplateBinding Height}">
                                                <Path x:Name="arrow1"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Margin="5,0,0,0"
                                                      Data="M2,5.5 L7,9.5 L12,5.5"
                                                      Width="15"
                                                      Height="15"
                                                      Fill="{x:Null}"
                                                      Stroke="{TemplateBinding Foreground}"
                                                      RenderTransformOrigin="0.5,0.5">
                                                </Path>
                                                <Path x:Name="arrow2"
                                                      Opacity="0"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Margin="5,0,0,0"
                                                      Data="M2,5.5 L7,9.5 L12,5.5"
                                                      Width="15"
                                                      Height="15"
                                                      Fill="{x:Null}"
                                                      Stroke="{TemplateBinding Foreground}"
                                                      RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <RotateTransform Angle="180"></RotateTransform>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </ToggleButton.Content>
                                    </ToggleButton>
                                    <StackPanel x:Name="stkPanel"
                                                Orientation="Horizontal"
                                                Margin="10,0,0,0">
                                        <ContentPresenter x:Name="content"
                                                          RecognizesAccessKey="True"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Header" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True"></Condition>
                                <Condition Property="IsChoosed"
                                           Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1"
                                                         Duration="0:0:0.2"
                                                         Storyboard.TargetName="bdrCover"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Duration="0:0:0.2"
                                                          Storyboard.TargetName="bdrCover"
                                                          Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>

                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.25"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="arrow2"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow2"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.25"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="arrow1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsExpanded"
                                 Value="False">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="False">
                            <Setter TargetName="arrow"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChoosed"
                                 Value="True">
                            <Setter TargetName="bdrSelectedCover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUTreeView}">
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="CoverBrush"
                Value="#11666666"></Setter>
        <Setter Property="ChoosedBrush"
                Value="#22666666"></Setter>
        <Setter Property="InnerHeight"
                Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  HorizontalScrollBarVisibility="Disabled"
                                  Style="{StaticResource MiniScrollViewer}">
                        <VirtualizingStackPanel Margin="0,0,0,0"
                                                Height="{TemplateBinding Height}"
                                                Width="{TemplateBinding Width}"
                                                IsItemsHost="True">
                        </VirtualizingStackPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUProgressBar}">
        <Setter Property="BorderBrush"
                Value="DimGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="CoverBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Foreground"
                Value="#FFAAAAAA"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Style.Triggers>
            <Trigger Property="Direction"
                     Value="LeftToRight">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            HorizontalAlignment="Left">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource ProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="Direction"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>
                                </Border>

                                <Label Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Direction"
                     Value="RightToLeft">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            HorizontalAlignment="Right">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource ProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="Direction"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>

                                </Border>
                                <Label Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Direction"
                     Value="BottomToTop">
                <Setter Property="FontSize"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Height="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            VerticalAlignment="Bottom">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource ProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="Direction"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>
                                </Border>
                                <Label Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Direction"
                     Value="TopToBottom">
                <Setter Property="FontSize"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Height="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            VerticalAlignment="Top">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource ProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="Direction"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>
                                </Border>
                                <Label Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTabControl}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="CoverBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUTabControl}">
                    <Grid ClipToBounds="True"
                          KeyboardNavigation.TabNavigation="Local"
                          HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <local:PURepeatButton x:Name="btnLeft"
                                                  Margin="5,0"
                                                  RepeatButtonStyle="Link"
                                                  Command="{Binding LeftCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                  CommandParameter="{Binding ElementName=scrollViewer}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  Content=""
                                                  FontSize="18"
                                                  FontFamily="{StaticResource IconFont}"></local:PURepeatButton>
                            <Grid  Grid.Column="1">
                                <ScrollViewer x:Name="scrollViewer"
                                              Style="{StaticResource MiniScrollViewer}"
                                              VerticalScrollBarVisibility="Disabled"
                                              HorizontalScrollBarVisibility="Hidden"
                                              Margin="0,0,0,1"
                                              VerticalAlignment="Stretch"
                                              HorizontalAlignment="Stretch">
                                    <StackPanel Orientation="Horizontal">
                                        <TabPanel x:Name="HeaderPanel"
                                                  IsItemsHost="True"></TabPanel>
                                    </StackPanel>
                                </ScrollViewer>
                                <Border BorderThickness="0,0,0,1"
                                        Margin="{Binding Path=ActualWidth,ElementName=HeaderPanel,Converter={StaticResource WidthToMarginConverter}}"
                                        BorderBrush="{TemplateBinding BorderBrush}"></Border>
                            </Grid>
                            <local:PURepeatButton x:Name="btnRight"
                                                  Grid.Column="2"
                                                  RepeatButtonStyle="Link"
                                                  Margin="5,0"
                                                  Command="{Binding RightCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                  CommandParameter="{Binding ElementName=scrollViewer}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Foreground="{StaticResource Theme}"
                                                  Content=""
                                                  FontSize="18"
                                                  FontFamily="{StaticResource IconFont}"></local:PURepeatButton>
                        </Grid>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          Grid.Row="1"
                                          ContentSource="SelectedContent"
                                          Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SideButtonVisibility"
                                 Value="Collapsed">
                            <Setter TargetName="btnLeft"
                                    Property="Visibility"
                                    Value="Collapsed"></Setter>
                            <Setter TargetName="btnRight"
                                    Property="Visibility"
                                    Value="Collapsed"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUTabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TabControlStyle,RelativeSource={RelativeSource AncestorType=TabControl}}"
                         Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabItem}">
                            <Grid Background="{TemplateBinding Background}">
                                <StackPanel Orientation="Horizontal">
                                    <Label x:Name="lblIcon"
                                           Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                           Margin="5,0,-10,0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{StaticResource IconFont}"></Label>
                                    <Label x:Name="lblContent"
                                           Content="{TemplateBinding Header}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,0"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{Binding FontFamily,RelativeSource={RelativeSource AncestorType=TabControl}}"></Label>
                                    <local:PUButton x:Name="btnDelete"
                                                    Content="×"
                                                    Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    ButtonStyle="Link"
                                                    FontSize="15"
                                                    Margin="3,0"
                                                    Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                    Visibility="Collapsed"></local:PUButton>
                                </StackPanel>
                                <Border x:Name="bdrSelected"
                                        BorderThickness="0,0,0,1"
                                        BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                             Value="">
                                    <Setter TargetName="lblIcon"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </DataTrigger>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,0,0,3"></Setter>
                                    <Setter TargetName="lblIcon"
                                            Property="Foreground"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderBrush"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="Foreground"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="CoverBrush"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="DeleteButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnDelete"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Margin"
                                            Value="10,0,0,0"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding TabControlStyle,RelativeSource={RelativeSource AncestorType=TabControl}}"
                         Value="Classic">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabItem}">
                            <Grid Background="{TemplateBinding Background}">
                                <StackPanel Orientation="Horizontal">
                                    <Label x:Name="lblIcon"
                                           Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                           Margin="5,0,-10,0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{StaticResource IconFont}"></Label>
                                    <Label x:Name="lblContent"
                                           Content="{TemplateBinding Header}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,0"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{Binding FontFamily,RelativeSource={RelativeSource AncestorType=TabControl}}"></Label>
                                    <local:PUButton x:Name="btnDelete"
                                                    Content="×"
                                                    Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    ButtonStyle="Link"
                                                    FontSize="15"
                                                    Margin="3,0"
                                                    Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                    Visibility="Collapsed"></local:PUButton>
                                </StackPanel>
                                <Border x:Name="bdrSelected"
                                        BorderThickness="0,0,0,1"
                                        BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                             Value="">
                                    <Setter TargetName="lblIcon"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </DataTrigger>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="1,1,1,0"></Setter>
                                    <Setter TargetName="lblIcon"
                                            Property="Foreground"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="Foreground"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="CoverBrush"
                                            Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="DeleteButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnDelete"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Margin"
                                            Value="10,0,0,0"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type local:PUListBox}">
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="CoverBrush"
                Value="#22E6E6E6"></Setter>
        <Setter Property="SelectedBrush"
                Value="#E6E6E6"></Setter>
        <Setter Property="SearchBrush"
                Value="#44444444"></Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUListBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                        </Border>
                        <ScrollViewer Margin="0"
                                      Focusable="false">
                            <StackPanel Margin="2"
                                        IsItemsHost="True" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUListBoxItem}">
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUListBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"></Border>
                        <Border x:Name="bdrHover"
                                Opacity="0"
                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=ListBox}}"></Border>
                        <Border x:Name="bdrSelected"
                                Opacity="0"
                                Background="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=ListBox}}"></Border>
                        <Border x:Name="bdrSearched"
                                Opacity="0"
                                Background="{Binding SearchBrush,RelativeSource={RelativeSource AncestorType=ListBox}}"></Border>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="bdrHover"
                                    Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="bdrSelected"
                                    Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Searched">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="bdrSearched"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0:0:0.3"></DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="bdrSearched"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.3"
                                                     BeginTime="0:0:1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUSplitLine}">
        <Setter Property="LineBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Thickness"
                Value="1"></Setter>
        <Style.Triggers>
            <Trigger Property="Alignment"
                     Value="Top">
                <Setter Property="VerticalAlignment"
                        Value="Top"></Setter>
                <Setter Property="Height"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Height="{Binding Thickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Width="{TemplateBinding Width}"
                                    Background="{Binding LineBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Margin}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="Alignment"
                     Value="Bottom">
                <Setter Property="VerticalAlignment"
                        Value="Bottom"></Setter>
                <Setter Property="Height"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Height="{Binding Thickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Width="{TemplateBinding Width}"
                                    Background="{Binding LineBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Margin}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="Alignment"
                     Value="Left">
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Width"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Width="{Binding Thickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Height="{TemplateBinding Height}"
                                    Background="{Binding LineBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Margin}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="Alignment"
                     Value="Right">
                <Setter Property="HorizontalAlignment"
                        Value="Right"></Setter>
                <Setter Property="Width"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Width="{Binding Thickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Height="{TemplateBinding Height}"
                                    Background="{Binding LineBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Margin}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
