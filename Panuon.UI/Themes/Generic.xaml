<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Panuon.UI">

    <SolidColorBrush x:Key="Theme" Color="#FF3E3E3E"/>
    <FontFamily x:Key="FontAwesome" >/#fontawesome</FontFamily>
    
    
    
    <Style TargetType="{x:Type local:PUButton}">
        <Setter Property="Background" Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Content" Value="Button"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Style.Triggers>
            <Trigger Property="ButtonStyle" Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid>
                                <Border x:Name="bdrOuter" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Border x:Name="bdrInner" Background="{TemplateBinding Background}" BorderThickness="0" ClipToBounds="True" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                        <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Content"></ContentPresenter>
                                    </Border>
                                </Border>
                                <Border x:Name="bdrHoverCover" Background="{Binding CoverBackground,RelativeSource={RelativeSource AncestorType=Button}}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}" Opacity="0"></Border>
                                <Border x:Name="bdrPressedCover" Background="{Binding CoverBackground,RelativeSource={RelativeSource AncestorType=Button}}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}" Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="bdrPressedCover" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle" Value="Hollow">
                <Setter Property="Foreground" Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderBrush" Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness" Value="1"></Setter>
                <Setter Property="CoverBackground" Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid>
                                <Border x:Name="bdrOuter" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border x:Name="bdrHoverCover" Background="{Binding CoverBackground,RelativeSource={RelativeSource AncestorType=Button}}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}" Opacity="0" Margin="-1"></Border>
                                        <Border x:Name="bdrInner" BorderThickness="0" ClipToBounds="True" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrPressedCover" Background="White" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"  Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="bdrPressedCover" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle" Value="Outline">
                <Setter Property="Foreground" Value="LightGray"></Setter>
                <Setter Property="BorderBrush" Value="LightGray"></Setter>
                <Setter Property="BorderThickness" Value="1"></Setter>
                <Setter Property="CoverBackground" Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid>
                                <Border x:Name="bdrOuter" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border x:Name="bdrInner" BorderThickness="0" ClipToBounds="True" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrHoverCover" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{Binding CoverBackground,RelativeSource={RelativeSource AncestorType=Button}}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}" Opacity="1">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="White"></GradientStop>
                                                <GradientStop x:Name="offset" Offset="0" Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Label Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding Content}" Foreground="{Binding CoverBackground,RelativeSource={RelativeSource AncestorType=Button}}"></Label>

                                </Border>
                                <Border x:Name="bdrPressedCover" Background="{TemplateBinding CoverBackground}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"  Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="bdrPressedCover" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset" Storyboard.TargetProperty="Offset" To="1" Duration="0:0:0.15"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset" Storyboard.TargetProperty="Color" To="White" Duration="0:0:0.05" BeginTime="0:0:0.15"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset" Storyboard.TargetProperty="Offset" To="0" Duration="0:0:0.15" BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTextBox}">
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="BorderThickness" Value="0.3"></Setter>
        <Setter Property="Foreground" Value="Gray"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="3,1,1,1"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Style.Triggers>
            <Trigger Property="TextBoxStyle" Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTextBox}">
                            <Grid>
                                <Border x:Name="bdrOuter" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect" ShadowDepth="0" BlurRadius="0" Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}" Opacity="0.4"/>
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner" ClipToBounds="True" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" />
                                        <TextBlock  x:Name="tbWaterMark" Margin="3,0,0,0" Padding="{TemplateBinding Padding}" TextWrapping="Wrap" Focusable="False" IsHitTestVisible="False" Visibility="Collapsed" Text="{Binding WaterMark,RelativeSource={RelativeSource AncestorType=TextBox}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"  >
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="5"  Duration="0:0:0.2" Storyboard.TargetName="effect" Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"  Duration="0:0:0.2" Storyboard.TargetName="effect" Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" TargetName="tbWaterMark" Value="Visible"/>
                                </Trigger>
                                <Trigger  Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TextBoxStyle" Value="IconGroup">
                <Setter Property="Padding" Value="30,1,1,1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTextBox}">
                            <Grid>
                                <Border x:Name="bdrOuter" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect" ShadowDepth="0" BlurRadius="0" Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}" Opacity="0.4"/>
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner" ClipToBounds="True" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border Width="{Binding IconWidth,RelativeSource={RelativeSource AncestorType=TextBox}}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}" BorderThickness="1">
                                            <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TextBox}}" Foreground="{TemplateBinding Foreground}" FontFamily="{StaticResource FontAwesome}"></Label>
                                        </Border>
                                        <Grid  >
                                            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" Height="{TemplateBinding Height}"  IsTabStop="False" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                            <TextBlock  x:Name="tbWaterMark" Margin="3,0,0,0" Padding="{TemplateBinding Padding}" TextWrapping="Wrap" Focusable="False" IsHitTestVisible="False" Visibility="Collapsed" Text="{Binding WaterMark,RelativeSource={RelativeSource AncestorType=TextBox}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"  >
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="5"  Duration="0:0:0.2" Storyboard.TargetName="effect" Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"  Duration="0:0:0.2" Storyboard.TargetName="effect" Storyboard.TargetProperty="BlurRadius" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" TargetName="tbWaterMark" Value="Visible"/>
                                </Trigger>
                                <Trigger  Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarThumb"  TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"  Value="true"/>
        <Setter Property="IsTabStop"  Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border  Background="#90B9B9B9"  CornerRadius="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"  Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"  Value="false"/>
        <Setter Property="Background"  Value="Transparent"/>
        <Setter Property="Width"  Value="12"/>
        <Setter Property="MinWidth"  Value="12"/>
        <Setter Property="Cursor" Value="Arrow"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track"  IsEnabled="{TemplateBinding IsMouseOver}"  IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"  Value="Horizontal">
                <Setter Property="Background"  Value="Transparent"/>
                <Setter Property="Margin"  Value="1,0,6,1"/>
                <Setter Property="Height"  Value="12"/>
                <Setter Property="MinHeight"  Value="12"/>
                <Setter Property="Width"  Value="Auto"/>
                <Setter Property="Opacity" Value="0.3"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"   IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:PUScrollViewer}">
        <Setter Property="BorderBrush"  Value="LightGray"/>
        <Setter Property="BorderThickness"  Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment"  Value="Left"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"   BorderThickness="{TemplateBinding BorderThickness}"   SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="0,0,10,10"  ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" Opacity="0.5" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Style="{StaticResource ScrollBar}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Opacity="0.5" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Style="{StaticResource ScrollBar}" VerticalAlignment="Bottom" Value="{TemplateBinding HorizontalOffset}"  ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1"  Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation  Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"  Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3" BeginTime="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity"  To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"  SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"  Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3" BeginTime="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity"  To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"  SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"  Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3" BeginTime="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
